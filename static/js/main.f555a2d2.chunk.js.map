{"version":3,"sources":["components/layout/Navbar.js","components/help/NotFound.js","components/help/Message.js","components/help/spinner.gif","components/help/Spinner.js","components/info/RenderChart.js","utils/fitData.js","components/info/History.js","actions/actions.js","utils/url.js","App.js","reportWebVitals.js","reducers/historyReducer.js","store.js","index.js"],"names":["Navbar","className","id","to","type","data-toggle","data-target","src","alt","NotFound","props","onClick","history","goBack","Message","variant","children","Spinner","spinner","style","width","margin","display","RenderChart","name","title","data","newCases","dataArray","field","newDate","String","split","join","push","date","value","categoriesArray","seriesArray","forEach","item","index","length","fitData","options","chart","grid","padding","right","left","xaxis","categories","yaxis","labels","formatter","val","toLocaleString","dataLabels","enabled","text","align","offsetY","fontSize","series","height","History","useState","country","setCountry","province","timeline","cases","deaths","recovered","setData","dispatch","useDispatch","useSelector","state","loading","error","useEffect","onSubmit","e","preventDefault","lastdays","a","axios","get","res","payload","response","message","getHistoricalDataByCountry","onChange","target","placeholder","required","Object","keys","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"uMAyBeA,EAtBA,WACb,OACE,qBAAKC,UAAU,+CAA+CC,GAAG,SAAjE,SACE,sBAAKD,UAAU,gCAAf,UACE,cAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,mBAAvB,4BACA,wBACEA,UAAU,iBACVG,KAAK,SACLC,cAAY,WACZC,cAAY,kBAJd,SAKE,qBAAKC,IAAI,uBAAuBN,UAAU,YAAYO,IAAI,gBAE5D,qBAAKP,UAAU,2BAA2BC,GAAG,iBAA7C,SACE,oBAAID,UAAU,2CCOTQ,EApBE,SAACC,GAChB,OACE,qBAAKT,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,sDACA,oBAAIA,UAAU,OAAd,oZAEA,sBAAKA,UAAU,eAAf,UACE,wBAAQA,UAAU,kBAAkBU,QAASD,EAAME,QAAQC,OAA3D,4CACA,cAAC,IAAD,CAAMV,GAAG,IAAIF,UAAU,uBAAvB,+I,gBCJCa,EARC,SAAC,GAAoC,IAAD,IAAjCC,eAAiC,MAAvB,OAAuB,EAAfC,EAAe,EAAfA,SACnC,OACE,qBAAKf,UAAS,sBAAiBc,GAA/B,SACGC,KCLQ,MAA0B,oCCc1BC,EAXC,WACd,OACE,qBAAKhB,UAAU,UAAf,SACE,qBACEM,IAAKW,EACLV,IAAI,aACJW,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,c,iBCoD3CC,EAxDK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAA6B,IAAvBC,SAAuB,ECH1C,SAAC,GAAwB,IAAtBD,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAY,GAGhB,IAAK,IAAIC,KAASH,EAAM,CAEtB,IAAII,EAAUC,OAAOF,GAAOG,MAAM,KAFZ,EAGK,CAACF,EAAQ,GAAIA,EAAQ,IAA/CA,EAAQ,GAHa,KAGTA,EAAQ,GAHC,KAItBA,EAAUA,EAAQG,KAAK,KAEvBL,EAAUM,KAAK,CACbC,KAAML,EACNM,MAAOV,EAAKG,KAIhB,IAAIQ,EAAkB,GAClBC,EAAc,GAuBlB,OAlBAV,EAAUW,SAAQ,SAACC,EAAMC,GAGnBd,GAAsB,IAAVc,IAGZA,EARQ,IAQU,GAAKb,EAAUc,OAASD,EAAQ,KACpDJ,EAAgBH,KAAKM,EAAKL,MAEtBR,EAEFW,EAAYJ,KAAKM,EAAKJ,MAAQR,EAAUa,EAAQ,GAAGL,OAEnDE,EAAYJ,KAAKM,EAAKJ,WAKrB,CAAEC,kBAAiBC,eDpCeK,CAAQ,CAAEjB,OAAMC,cADM,WAGzDiB,EAAU,CACdC,MAAO,CACL3C,GAAI,aAEN4C,KAAM,CACJC,QAAS,CACPC,MAAO,GACPC,KAAM,KAGVC,MAAO,CACLC,WAd2D,EACvDd,iBAeNe,MAAO,CACLC,OAAQ,CACNC,UAAW,SAACC,GAAD,OAASA,EAAIC,oBAG5BC,WAAY,CACVC,SAAS,GAEXjC,MAAO,CACLkC,KAAMlC,EACNmC,MAAO,SACPvC,OAAQ,GACRwC,QAAS,GACT1C,MAAO,CACL2C,SAAU,UAKVC,EAAS,CACb,CACEvC,KAAMA,EACNE,KAtC2D,EACtCY,cA0CzB,OACE,qBAAKrC,UAAU,QAAf,SACE,cAAC,IAAD,CACE2C,QAASA,EACTmB,OAAQA,EACR3D,KAAK,MACLgB,MAAM,OACN4C,OAAO,a,0CEyDAC,EAvGC,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACbC,EADa,KACJC,EADI,OAEIF,mBAAS,CAC/BG,SAAU,GACVC,SAAU,CACRC,MAAO,GACPC,OAAQ,GACRC,UAAW,MAPK,mBAEb/C,EAFa,KAEPgD,EAFO,KAWdC,EAAWC,cAEXhE,EAAUiE,aAAY,SAAAC,GAAK,OAAIA,EAAMlE,WACrCmE,EAAmBnE,EAAnBmE,QAASC,EAAUpE,EAAVoE,MAEfC,qBAAU,WACRP,EAAQ9D,EAAQc,QACf,CAACd,EAAQc,OAQZ,OACE,sBAAKzB,UAAU,kBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,oBAAIA,UAAU,cAAd,oDAIJ,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,2BAAf,SACE,sBAAMiF,SAhBG,SAACC,GAChBA,EAAEC,iBACFT,EC1BsC,SAAC,GAAD,IAAGR,EAAH,EAAGA,QAAH,IAAYkB,gBAAZ,MAAuB,GAAvB,gDAAgC,WAAOV,GAAP,iBAAAW,EAAA,sEAEtEX,EAAS,CAAEvE,KAAM,oBAFqD,SAIpDmF,IAAMC,IAAN,UCTV,qBDSU,mCAA2CrB,EAA3C,qBAA+DkB,IAJX,OAIhEI,EAJgE,OAK9D/D,EAAS+D,EAAT/D,KAERiD,EAAS,CAAEvE,KAAM,wBAAyBsF,QAAShE,IAPmB,gDAUtEiD,EAAS,CACPvE,KAAM,sBACNsF,QAAS,KAAMC,UAAY,KAAMA,SAASjE,KAAKkE,QAC3C,KAAMD,SAASjE,KAAKkE,QACpB,KAAMA,UAd0D,yDAAhC,sDD0B7BC,CAA2B,CAAE1B,UAASkB,SAAU,OACzDjB,EAAW,KAaL,SACE,sBAAKnE,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,+BAEF,uBACEG,KAAK,OACLH,UAAU,eACV6F,SAAU,SAACX,GAAD,OAAOf,EAAWe,EAAEY,OAAO3D,QACrCA,MAAO+B,EACP6B,YAAY,UACZC,UAAQ,IAEV,qBAAKhG,UAAU,qBAAf,SACE,wBAAQA,UAAU,kBAAkBG,KAAK,SAAzC,+BAOT4E,GAAS,cAAC,EAAD,CAASjE,QAAQ,SAAjB,SAA2BiE,IAEpCD,EAAU,cAAC,EAAD,IACT,qCACGmB,OAAOC,KAAKzE,EAAK4C,SAASC,OAAO7B,OAAS,GACzC,qCACE,qBAAKzC,UAAU,WAAf,SACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CACEuB,KAAK,cACLC,MAAK,yBAAoBC,EAAKyC,SAC9BzC,KAAMA,EAAK4C,SAASC,YAK1B,qBAAKtE,UAAU,WAAf,SACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CACEuB,KAAK,oBACLC,MAAK,+BAA0BC,EAAKyC,SACpCzC,KAAMA,EAAK4C,SAASC,MACpB5C,UAAU,WAOnBuE,OAAOC,KAAKzE,EAAK4C,SAASE,QAAQ9B,OAAS,GAC1C,qBAAKzC,UAAU,WAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CACEuB,KAAK,eACLC,MAAK,0BAAqBC,EAAKyC,SAC/BzC,KAAMA,EAAK4C,SAASE,oBGzEvB4B,EAfH,WACV,OACE,eAAC,IAAD,WAEE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtC,IACjC,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,IAAIC,UAAW9F,WCT1B+F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCPRQ,EAAe,CACnBvF,KAAM,CACJ2C,SAAU,GACVC,SAAU,CACRC,MAAO,GACPC,OAAQ,GACRC,UAAW,KAGfM,SAAS,EACTC,MAAO,ICHHkC,EAAUC,0BAAgB,CAC9BvG,QDK4B,WAAmC,IAAlCkE,EAAiC,uDAAzBmC,EAAcG,EAAW,uCAC9D,OAAQA,EAAOhH,MACb,IAAK,kBACH,OAAO,2BACF0E,GADL,IAEEC,SAAS,EACTC,MAAO,KAGX,IAAK,wBACH,OAAO,2BACFF,GADL,IAEEpD,KAAM0F,EAAO1B,QACbX,SAAS,EACTC,MAAO,KAGX,IAAK,sBACH,OAAO,2BACFF,GADL,IAGEpD,KAAM,CACJ2C,SAAU,GACVC,SAAU,CACRC,MAAO,GACPC,OAAQ,GACRC,UAAW,KAGfO,MAAOoC,EAAO1B,QACdX,SAAS,IAGb,QAAS,OAAOD,MCjCduC,EAAa,CAACC,KAULC,EARDC,sBACZN,EALmB,GAOnBO,8BACEC,kBAAe,WAAf,EAAmBL,KCVvBM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.f555a2d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-primary pt-0 pb-0\" id=\"navbar\">\r\n      <div className=\"container pt-2 pb-2 pl-0 pr-0\">\r\n        <Link to='/' className=\"navbar-brand p-2\">COVID Stat App</Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarCollapse\">\r\n          <img src=\"../img/hamburger.svg\" className=\"hamburger\" alt=\"Hamburger\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n          <ul className=\"navbar-nav ml-auto list-inline\">\r\n\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-8 col-md-10 m-auto\">\r\n          <div className=\"jumbotron mt-3\">\r\n            <h2 className=\"text-center\">404 Ошибка</h2>\r\n            <h5 className=\"mt-3\">Эта страница не найдена. Возможно, указанного ресурса больше не существует.</h5>\r\n\r\n            <div className=\"button-group\">\r\n              <button className=\"btn btn-primary\" onClick={props.history.goBack}>Назад</button>\r\n              <Link to=\"/\" className=\"btn btn-success ml-3\">На стартовую страницу</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nconst Message = ({ variant = 'info', children }) => {\r\n  return (\r\n    <div className={`alert alert-${variant}`}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","export default __webpack_public_path__ + \"static/media/spinner.dbb22bcf.gif\";","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <img\r\n        src={spinner}\r\n        alt=\"Loading...\"\r\n        style={{ width: '300px', margin: 'auto', display: 'block' }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport Chart from \"react-apexcharts\";\r\nimport { fitData } from '../../utils/fitData';\r\n\r\nconst RenderChart = ({ name, title, data, newCases = false }) => {\r\n  const { categoriesArray, seriesArray } = fitData({ data, newCases });\r\n\r\n  const options = {\r\n    chart: {\r\n      id: \"basic-bar\"\r\n    },\r\n    grid: {\r\n      padding: {\r\n        right: 20,\r\n        left: 20,\r\n      }\r\n    },\r\n    xaxis: {\r\n      categories: categoriesArray\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        formatter: (val) => val.toLocaleString()\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    title: {\r\n      text: title,\r\n      align: \"center\",\r\n      margin: 20,\r\n      offsetY: 20,\r\n      style: {\r\n        fontSize: \"25px\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const series = [\r\n    {\r\n      name: name,\r\n      data: seriesArray\r\n    }\r\n  ];\r\n\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <Chart\r\n        options={options}\r\n        series={series}\r\n        type=\"bar\"\r\n        width=\"100%\"\r\n        height=\"400px\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderChart;","// this function changes the structure of data fetched from URL \r\n// so that it can be passed to the Chart\r\nexport const fitData = ({ data, newCases }) => {\r\n  let dataArray = [];\r\n\r\n  // convert object to array\r\n  for (let field in data) {\r\n    // change the format of date from MM/DD/YY to DD/MM/YY\r\n    let newDate = String(field).split('/');\r\n    [newDate[0], newDate[1]] = [newDate[1], newDate[0]];\r\n    newDate = newDate.join('/');\r\n\r\n    dataArray.push({\r\n      date: newDate,\r\n      value: data[field]\r\n    });\r\n  }\r\n\r\n  let categoriesArray = [];\r\n  let seriesArray = [];\r\n\r\n  // show every n-th day\r\n  const EVERY = 7;\r\n\r\n  dataArray.forEach((item, index) => {\r\n    // if we are calculating new cases\r\n    // we skip the first element because we do not know the previous element\r\n    if (newCases && index === 0) return;\r\n\r\n    // show last 5 days and every n-th day\r\n    if (index % EVERY === 0 || dataArray.length - index < 5) {\r\n      categoriesArray.push(item.date);\r\n\r\n      if (newCases) {\r\n        // new cases = current value - previous value\r\n        seriesArray.push(item.value - dataArray[index - 1].value);\r\n      } else {\r\n        seriesArray.push(item.value);\r\n      }\r\n    }\r\n  });\r\n\r\n  return { categoriesArray, seriesArray };\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Message from '../help/Message';\r\nimport Spinner from '../help/Spinner';\r\nimport RenderChart from './RenderChart';\r\n\r\nimport { getHistoricalDataByCountry } from '../../actions/actions';\r\n\r\nconst History = () => {\r\n  const [country, setCountry] = useState('');\r\n  const [data, setData] = useState({\r\n    province: [],\r\n    timeline: {\r\n      cases: {},\r\n      deaths: {},\r\n      recovered: {}\r\n    }\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useSelector(state => state.history);\r\n  let { loading, error } = history;\r\n\r\n  useEffect(() => {\r\n    setData(history.data);\r\n  }, [history.data]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getHistoricalDataByCountry({ country, lastdays: 120 }));\r\n    setCountry('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-12 m-auto\">\r\n          <h2 className=\"text-center\">Most accurate COVID-19 information</h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-lg-5 col-md-8 m-auto\">\r\n          <form onSubmit={onSubmit}>\r\n            <div className=\"input-group mb-3\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Enter a country</span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setCountry(e.target.value)}\r\n                value={country}\r\n                placeholder=\"Country\"\r\n                required\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n      {loading ? <Spinner /> : (\r\n        <>\r\n          {Object.keys(data.timeline.cases).length > 0 && (\r\n            <>\r\n              <div className=\"row mb-3\">\r\n                <div className=\"col-12 mt-2\">\r\n                  <RenderChart\r\n                    name=\"Total Cases\"\r\n                    title={`Total Cases in ${data.country}`}\r\n                    data={data.timeline.cases}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row mb-3\">\r\n                <div className=\"col-12 mt-2\">\r\n                  <RenderChart\r\n                    name=\"New Cases Per Day\"\r\n                    title={`New Cases Per Day in ${data.country}`}\r\n                    data={data.timeline.cases}\r\n                    newCases={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {Object.keys(data.timeline.deaths).length > 0 && (\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-12\">\r\n                <RenderChart\r\n                  name=\"Total Deaths\"\r\n                  title={`Total Deaths in ${data.country}`}\r\n                  data={data.timeline.deaths}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default History;","import axios from 'axios';\r\nimport URL from '../utils/url';\r\n\r\n\r\n// get historical data of some country\r\nexport const getHistoricalDataByCountry = ({ country, lastdays = 30 }) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'HISTORY_LOADING' });\r\n\r\n    const res = await axios.get(`${URL}/v3/covid-19/historical/${country}?lastdays=${lastdays}`);\r\n    const { data } = res;\r\n\r\n    dispatch({ type: 'HISTORY_FETCH_SUCCESS', payload: data });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'HISTORY_FETCH_ERROR',\r\n      payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    });\r\n  }\r\n};","const URL = 'https://disease.sh';\r\n\r\nexport default URL;","import React from 'react';\nimport {\n  HashRouter as Router,\n  // BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport NotFound from './components/help/NotFound';\n\nimport History from './components/info/History';\n\nconst App = () => {\n  return (\n    <Router>\n      {/* <Router basename={process.env.PUBLIC_URL}> */}\n      <Navbar />\n\n      <Switch>\n        <Route exact path=\"/\" component={History} />\n        <Route exact path=\"*\" component={NotFound} />\n      </Switch>\n\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  data: {\r\n    province: [],\r\n    timeline: {\r\n      cases: {},\r\n      deaths: {},\r\n      recovered: {}\r\n    }\r\n  },\r\n  loading: false,\r\n  error: ''\r\n};\r\n\r\nexport const historyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'HISTORY_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: ''\r\n      };\r\n\r\n    case 'HISTORY_FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n        error: ''\r\n      };\r\n\r\n    case 'HISTORY_FETCH_ERROR':\r\n      return {\r\n        ...state,\r\n        // clear data\r\n        data: {\r\n          province: [],\r\n          timeline: {\r\n            cases: {},\r\n            deaths: {},\r\n            recovered: {}\r\n          }\r\n        },\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    default: return state;\r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// import reducers\r\nimport { historyReducer } from './reducers/historyReducer';\r\n\r\nconst reducer = combineReducers({\r\n  history: historyReducer\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}